{"version":3,"sources":["components/TodoItem/TodoItem.jsx","containers/Filter/constants.js","components/TodoList/TodoList.jsx","containers/Filter/Filter.jsx","containers/Filter/actions.js","containers/TodoInput/constants.js","containers/TodoInput/actions.js","containers/TodoInput/TodoInput.jsx","containers/App/constants.js","containers/App/App.jsx","containers/App/actions.js","reportWebVitals.js","containers/App/reducers.js","containers/Filter/reducers.js","containers/TodoInput/reducers.js","index.jsx"],"names":["TodoItem","id","text","done","index","onToggle","onRemove","pStyle","textDecoration","overflowWrap","labelId","ListItem","dense","button","onClick","ListItemIcon","Checkbox","checked","edge","disableRipple","inputProps","ListItemText","style","ListItemSecondaryAction","IconButton","FILTER_ALL","FILTER_DONE","FILTER_UNDONE","TodoList","props","todoItems","filter","List","el","map","connect","state","changeFilter","dispatch","showAllTodo","type","showDoneTodo","showUndoneTodo","isBold","buttonFilter","fontWeight","ButtonGroup","variant","color","Button","INPUT_CHANGE","changeInput","payload","inputText","onInputChange","e","target","value","onAdd","TextField","fullWidth","onChange","onKeyUp","key","ADD_TODO_ITEM","REMOVE_TODO_ITEM","EDIT_TODO_ITEM","TOGGLE_ITEM","editTodoList","removeTodoItem","toggleItem","Grid","container","gap","item","xs","justify","Typography","component","direction","spacing","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initialStateTodoList","action","uuidv4","initialStateFilter","initialStateTodoInput","rootReducer","combineReducers","store","createStore","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.60a72aee.chunk.js","sourcesContent":["/* eslint-disable react/prop-types */\nimport React from 'react';\nimport {\n  ListItem,\n  ListItemText,\n  ListItemSecondaryAction,\n  IconButton,\n  ListItemIcon,\n} from '@material-ui/core';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport Checkbox from '@material-ui/core/Checkbox';\n\nexport default function TodoItem({\n  id, text, done, index, onToggle, onRemove,\n}) {\n  const pStyle = {\n    textDecoration: done ? 'line-through' : 'none',\n    overflowWrap: 'break-word',\n  };\n\n  const labelId = `checkbox-list-label-${index}`;\n\n  return (\n    <ListItem key={id} dense button onClick={onToggle}>\n      <ListItemIcon>\n        <Checkbox\n          checked={done}\n          edge=\"start\"\n          disableRipple\n          inputProps={{ 'aria-labelledby': labelId }}\n        />\n      </ListItemIcon>\n      <ListItemText style={pStyle}>{text}</ListItemText>\n      <ListItemSecondaryAction>\n        <IconButton onClick={onRemove}>\n          <DeleteIcon />\n        </IconButton>\n      </ListItemSecondaryAction>\n    </ListItem>\n\n  );\n}\n","export const FILTER_ALL = 'FILTER_ALL';\nexport const FILTER_DONE = 'FILTER_DONE';\nexport const FILTER_UNDONE = 'FILTER_UNDONE';\n","/* eslint-disable react/prop-types */\nimport React from 'react';\nimport { List } from '@material-ui/core';\nimport TodoItem from '../TodoItem/TodoItem';\nimport { FILTER_ALL, FILTER_DONE, FILTER_UNDONE } from '../../containers/Filter/constants';\n\nexport default function TodoList(props) {\n  const {\n    todoItems, onRemove, onToggle, filter,\n  } = props;\n  return (\n    <List>\n      {todoItems\n        .filter((el) => {\n          switch (filter) {\n            case FILTER_ALL:\n              return true;\n            case FILTER_DONE:\n              return el.done;\n            case FILTER_UNDONE:\n              return !el.done;\n            default:\n              return true;\n          }\n        })\n        .map((el, index) => (\n          <TodoItem\n            id={el.id}\n            text={el.text}\n            done={el.done}\n            onRemove={() => onRemove(index)}\n            onToggle={() => onToggle(index)}\n            index={index}\n            key={el.id}\n          />\n        ))}\n    </List>\n  );\n}\n","/* eslint-disable react/prop-types */\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { Button, ButtonGroup } from '@material-ui/core';\nimport {\n  filterTodoItemsAll,\n  filterTodoItemsDone,\n  filterTodoItemsUndone,\n} from './actions';\nimport { FILTER_ALL, FILTER_DONE, FILTER_UNDONE } from './constants';\n\nfunction Filter(props) {\n  const {\n    showAllTodo, showDoneTodo, showUndoneTodo, filter,\n  } = props;\n\n  const isBold = (buttonFilter) => ({\n    fontWeight: buttonFilter === filter ? 'bold' : 'normal',\n  });\n\n  return (\n    <ButtonGroup variant=\"contained\" color=\"primary\">\n      <Button style={isBold(FILTER_ALL)} onClick={showAllTodo}>All</Button>\n      <Button style={isBold(FILTER_DONE)} onClick={showDoneTodo}>Done</Button>\n      <Button style={isBold(FILTER_UNDONE)} onClick={showUndoneTodo}>Undone</Button>\n    </ButtonGroup>\n  );\n}\n\nconst mapStateToProps = (state) => ({\n  filter: state.changeFilter.filter,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  showAllTodo: () => dispatch(filterTodoItemsAll()),\n  showDoneTodo: () => dispatch(filterTodoItemsDone()),\n  showUndoneTodo: () => dispatch(filterTodoItemsUndone()),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\n","import {\n  FILTER_ALL,\n  FILTER_DONE,\n  FILTER_UNDONE,\n} from './constants';\n\nexport const filterTodoItemsAll = () => ({\n  type: FILTER_ALL,\n});\n\nexport const filterTodoItemsDone = () => ({\n  type: FILTER_DONE,\n});\n\nexport const filterTodoItemsUndone = () => ({\n  type: FILTER_UNDONE,\n});\n","const INPUT_CHANGE = 'INPUT_CHANGE';\nexport default INPUT_CHANGE;\n","import INPUT_CHANGE from './constants';\n\nconst changeInput = (text) => ({\n  type: INPUT_CHANGE,\n  payload: text,\n});\n\nexport default changeInput;\n","/* eslint-disable react/prop-types */\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { TextField } from '@material-ui/core';\nimport changeInput from './actions';\n\nfunction TodoInput(props) {\n  const { onInputChange, inputText, onAdd } = props;\n\n  return <TextField fullWidth onChange={onInputChange} value={inputText} onKeyUp={(e) => (e.key === 'Enter' ? onAdd() : null)} />;\n}\n\nconst mapStateToProps = (state) => ({\n  inputText: state.changeInput.inputText,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  onInputChange: (e) => dispatch(changeInput(e.target.value)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TodoInput);\n","export const ADD_TODO_ITEM = 'ADD_TODO_ITEM';\nexport const REMOVE_TODO_ITEM = 'REMOVE_TODO_ITEM';\nexport const EDIT_TODO_ITEM = 'EDIT_TODO_ITEM';\n\nexport const TOGGLE_ITEM = 'TOGGLE_ITEM';\n","/* eslint-disable react/prop-types */\nimport './App.css';\nimport { React } from 'react';\nimport { connect } from 'react-redux';\nimport { Button, Grid, Typography } from '@material-ui/core';\nimport TodoList from '../../components/TodoList/TodoList';\nimport Filter from '../Filter/Filter';\nimport TodoInput from '../TodoInput/TodoInput';\nimport {\n  addTodoItem,\n  removeTodoItem,\n  toggleItem,\n} from './actions';\n\nfunction App(props) {\n  const {\n    onAdd,\n    todoItems,\n    onRemove,\n    onToggle,\n    filter,\n    inputText,\n  } = props;\n\n  return (\n    <Grid container style={{ gap: '20px' }}>\n      <Grid container item xs={12} justify=\"center\">\n        <Typography variant=\"h2\" component=\"h1\">\n          Todo App\n        </Typography>\n      </Grid>\n      <Grid container item xs={12} justify=\"center\">\n        <Filter />\n      </Grid>\n      <Grid container item direction=\"row\" xs={12} justify=\"center\" spacing={1}>\n        <Grid container item xs={5}>\n          <TodoInput onAdd={() => onAdd(inputText)} />\n        </Grid>\n        <Button onClick={() => onAdd(inputText)}>Add</Button>\n      </Grid>\n      <Grid container xs={12} justify=\"center\">\n        <Grid item xs={6}>\n          <TodoList todoItems={todoItems} onRemove={onRemove} onToggle={onToggle} filter={filter} />\n        </Grid>\n      </Grid>\n    </Grid>\n  );\n}\n\nconst mapStateToProps = (state) => ({\n  todoItems: state.editTodoList.todoItems,\n  inputText: state.changeInput.inputText,\n  filter: state.changeFilter.filter,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  onAdd: (inputText) => dispatch(addTodoItem(inputText)),\n  onRemove: (index) => dispatch(removeTodoItem(index)),\n  onToggle: (index) => dispatch(toggleItem(index)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","import {\n  ADD_TODO_ITEM,\n  REMOVE_TODO_ITEM,\n  EDIT_TODO_ITEM,\n  TOGGLE_ITEM,\n} from './constants';\n\nexport const addTodoItem = (text) => ({\n  type: ADD_TODO_ITEM,\n  payload: text,\n});\n\nexport const removeTodoItem = (index) => ({\n  type: REMOVE_TODO_ITEM,\n  payload: index,\n});\n\nexport const editTodoItem = () => ({\n  type: EDIT_TODO_ITEM,\n});\n\nexport const toggleItem = (index) => ({\n  type: TOGGLE_ITEM,\n  payload: index,\n});\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({\n      getCLS, getFID, getFCP, getLCP, getTTFB,\n    }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { v4 as uuidv4 } from 'uuid';\n\nimport {\n  ADD_TODO_ITEM,\n  REMOVE_TODO_ITEM,\n  EDIT_TODO_ITEM,\n  TOGGLE_ITEM,\n} from './constants';\n\nconst initialStateTodoList = {\n  todoItems: [],\n};\n\nconst editTodoList = (state = initialStateTodoList, action = {}) => {\n  switch (action.type) {\n    case ADD_TODO_ITEM:\n      return action.payload !== ''\n        ? {\n          ...state,\n          todoItems: [...state.todoItems,\n            { id: uuidv4(), text: action.payload, done: false }],\n        }\n        : state;\n    case REMOVE_TODO_ITEM:\n      return {\n        ...state,\n        todoItems: state.todoItems.filter((el, index) => index !== action.payload),\n      };\n    case EDIT_TODO_ITEM:\n      return {\n        ...state,\n        todoItems: state.todoItems.map((el, index) => {\n          if (index === action.payload.index) {\n            return { ...el, text: action.payload.text };\n          }\n          return el;\n        }),\n      };\n    case TOGGLE_ITEM:\n      return {\n        ...state,\n        todoItems: state.todoItems.map((el, index) => {\n          if (index === action.payload) {\n            return { ...el, done: !el.done };\n          }\n          return el;\n        }),\n      };\n    default:\n      return state;\n  }\n};\n\nexport default editTodoList;\n","import {\n  FILTER_ALL,\n  FILTER_DONE,\n  FILTER_UNDONE,\n} from './constants';\n\nconst initialStateFilter = {\n  filter: FILTER_ALL,\n};\n\nconst changeFilter = (state = initialStateFilter, action = {}) => {\n  switch (action.type) {\n    case FILTER_ALL:\n      return { ...state, filter: FILTER_ALL };\n    case FILTER_DONE:\n      return { ...state, filter: FILTER_DONE };\n    case FILTER_UNDONE:\n      return { ...state, filter: FILTER_UNDONE };\n    default:\n      return state;\n  }\n};\n\nexport default changeFilter;\n","import INPUT_CHANGE from './constants';\n\nimport { ADD_TODO_ITEM } from '../App/constants';\n\nconst initialStateTodoInput = {\n  inputText: '',\n};\n\nconst changeInput = (state = initialStateTodoInput, action = {}) => {\n  switch (action.type) {\n    case INPUT_CHANGE:\n      return { ...state, inputText: action.payload };\n    case ADD_TODO_ITEM:\n      return { ...state, inputText: '' };\n    default:\n      return state;\n  }\n};\n\nexport default changeInput;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { Provider } from 'react-redux';\nimport { createStore, combineReducers } from 'redux';\nimport App from './containers/App/App';\nimport reportWebVitals from './reportWebVitals';\n\nimport editTodoList from './containers/App/reducers';\nimport changeFilter from './containers/Filter/reducers';\nimport changeInput from './containers/TodoInput/reducers';\n\nconst rootReducer = combineReducers({ editTodoList, changeFilter, changeInput });\nconst store = createStore(rootReducer);\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}