{"version":3,"sources":["components/TodoItem/TodoItem.js","containers/Filter/constants.js","components/TodoList/TodoList.js","containers/Filter/Filter.js","containers/Filter/actions.js","containers/TodoInput/constants.js","containers/TodoInput/TodoInput.js","containers/TodoInput/actions.js","containers/App/constants.js","containers/App/App.js","containers/App/actions.js","reportWebVitals.js","containers/App/reducers.js","containers/Filter/reducers.js","containers/TodoInput/reducers.js","index.js"],"names":["TodoItem","text","done","index","onToggle","onRemove","pStyle","textDecoration","overflowWrap","labelId","ListItem","dense","button","onClick","ListItemIcon","Checkbox","checked","edge","disableRipple","inputProps","ListItemText","style","ListItemSecondaryAction","IconButton","FILTER_ALL","FILTER_DONE","FILTER_UNDONE","TodoList","props","todoItems","filter","List","el","map","connect","state","changeFilter","dispatch","showAllTodo","type","showDoneTodo","showUndoneTodo","isBold","buttonFilter","fontWeight","ButtonGroup","variant","color","Button","INPUT_CHANGE","inputText","changeInput","onInputChange","e","target","value","payload","onAdd","TextField","fullWidth","onChange","onKeyUp","key","ADD_TODO_ITEM","REMOVE_TODO_ITEM","EDIT_TODO_ITEM","TOGGLE_ITEM","editTodoList","removeTodoItem","toggleItem","Grid","container","spacing","item","xs","justify","Typography","component","direction","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initialStateTodoList","initialStateFilter","initialStateTodoInput","rootReducer","combineReducers","action","store","createStore","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.484069e0.chunk.js","sourcesContent":["import React from 'react'\nimport { \n    ListItem,\n    ListItemText,\n    ListItemSecondaryAction,\n    IconButton,\n    ListItemIcon\n} from '@material-ui/core';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport Checkbox from '@material-ui/core/Checkbox';\n\nexport default function TodoItem({ text, done, index, onToggle, onRemove }) {\n    const pStyle = {\n        textDecoration: done ? 'line-through' : 'none',\n        overflowWrap: 'break-word'\n    }\n\n    const labelId = `checkbox-list-label-${index}`;\n\n    return (\n        <ListItem key={index} dense button onClick={onToggle}>\n            <ListItemIcon>\n                <Checkbox\n                    checked={done}\n                    edge=\"start\"\n                    disableRipple\n                    inputProps={{ 'aria-labelledby': labelId }}\n                />\n            </ListItemIcon>\n            <ListItemText style={pStyle}>{text}</ListItemText>\n            <ListItemSecondaryAction>\n                <IconButton onClick={onRemove}>\n                    <DeleteIcon />\n                </IconButton>\n            </ListItemSecondaryAction>\n        </ListItem>  \n            \n    )\n}\n","export const FILTER_ALL = 'FILTER_ALL';\nexport const FILTER_DONE = 'FILTER_DONE';\nexport const FILTER_UNDONE = 'FILTER_UNDONE';\n","import React from 'react'\nimport TodoItem from '../TodoItem/TodoItem';\nimport { FILTER_ALL, FILTER_DONE, FILTER_UNDONE } from '../../containers/Filter/constants';\nimport { List } from '@material-ui/core';\n\nexport default function TodoList(props) {\n    const { todoItems, onRemove, onToggle, filter } = props;\n    return (\n        <List>\n            {todoItems\n                .filter((el) => {\n                    switch (filter) {\n                        case FILTER_ALL:\n                            return true\n                        case FILTER_DONE:\n                            return el.done\n                        case FILTER_UNDONE:\n                            return !el.done\n                        default:\n                            return true;\n                    }\n                })\n                .map((el, index) => (\n                    <TodoItem text={el.text} done={el.done} onRemove={() => onRemove(index)} onToggle={() => onToggle(index)} index={index} key={index} />\n                ))\n            }\n        </List>\n    )\n}\n\n","import React from 'react'\nimport { connect } from 'react-redux';\nimport {\n    filterTodoItemsAll,\n    filterTodoItemsDone,\n    filterTodoItemsUndone\n} from './actions';\nimport { FILTER_ALL, FILTER_DONE, FILTER_UNDONE } from \"./constants\";\nimport { Button, ButtonGroup } from '@material-ui/core';\n\nfunction Filter(props) {\n    const { showAllTodo, showDoneTodo, showUndoneTodo, filter } = props;\n\n    const isBold = (buttonFilter) => ({\n        fontWeight: buttonFilter === filter ? 'bold' : 'normal' \n    })\n\n    return (\n        <ButtonGroup variant=\"contained\" color=\"primary\">\n            <Button style={isBold(FILTER_ALL)} onClick={showAllTodo}>All</Button>\n            <Button style={isBold(FILTER_DONE)} onClick={showDoneTodo}>Done</Button>\n            <Button style={isBold(FILTER_UNDONE)} onClick={showUndoneTodo}>Undone</Button>\n        </ButtonGroup>\n    )\n}\n\nconst mapStateToProps = state => ({\n    filter: state.changeFilter.filter,\n})\n\nconst mapDispatchToProps = dispatch => ({\n    showAllTodo: () => dispatch(filterTodoItemsAll()),\n    showDoneTodo: () => dispatch(filterTodoItemsDone()),\n    showUndoneTodo: () => dispatch(filterTodoItemsUndone())\n})\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter)\n","import {\n    FILTER_ALL,\n    FILTER_DONE,\n    FILTER_UNDONE,\n} from './constants';\n\nexport const filterTodoItemsAll = () => ({\n    type: FILTER_ALL,\n})\n\nexport const filterTodoItemsDone = () => ({\n    type: FILTER_DONE,\n})\n\nexport const filterTodoItemsUndone = () => ({\n    type: FILTER_UNDONE,\n})\n","export const INPUT_CHANGE = 'INPUT_CHANGE';\n","import React from 'react'\nimport { connect } from 'react-redux';\nimport { changeInput } from \"./actions\";\nimport { TextField } from '@material-ui/core';\n\nfunction TodoInput(props) {\n    const { onInputChange, inputText, onAdd } = props;\n\n    return <TextField fullWidth onChange={onInputChange} value={inputText} onKeyUp={(e) => e.key === 'Enter' ? onAdd() : null} />\n}\n\nconst mapStateToProps = state => ({\n    inputText: state.changeInput.inputText\n})\n\nconst mapDispatchToProps = dispatch => ({\n    onInputChange: e => dispatch(changeInput(e.target.value))\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TodoInput);\n","import {\n    INPUT_CHANGE\n} from './constants';\n\nexport const changeInput = (text) => {\n    return {\n        type: INPUT_CHANGE,\n        payload: text\n    }\n}\n","export const ADD_TODO_ITEM = 'ADD_TODO_ITEM';\nexport const REMOVE_TODO_ITEM = 'REMOVE_TODO_ITEM';\nexport const EDIT_TODO_ITEM = 'EDIT_TODO_ITEM';\n\nexport const TOGGLE_ITEM = 'TOGGLE_ITEM';\n","import './App.css';\nimport TodoList from '../../components/TodoList/TodoList';\nimport Filter from '../Filter/Filter'\nimport TodoInput from \"../TodoInput/TodoInput\";\nimport { connect } from 'react-redux';\nimport {\n  addTodoItem, \n  removeTodoItem, \n  toggleItem,\n} from \"./actions\";\nimport { Button, Grid, Typography } from '@material-ui/core';\n\nfunction App(props) {\n  const {\n    onAdd, \n    todoItems, \n    onRemove,\n    onToggle,\n    filter,\n    inputText\n  } = props;\n\n  return (\n    <Grid container spacing={3}>\n      <Grid container item xs={12} justify=\"center\">\n        <Typography variant=\"h2\" component=\"h1\">\n          Todo App\n        </Typography>\n      </Grid>\n      <Grid container item xs={12} justify=\"center\">\n        <Filter />\n      </Grid>\n      <Grid container item direction=\"row\" xs={12} justify=\"center\" spacing={1}>\n        <Grid container item xs={5}>\n          <TodoInput onAdd={() => onAdd(inputText)} />\n        </Grid>\n        <Button onClick={() => onAdd(inputText)}>Add</Button>\n      </Grid>\n      <Grid container xs={12} justify=\"center\">\n        <Grid item xs={6}>\n          <TodoList todoItems={todoItems} onRemove={onRemove} onToggle={onToggle} filter={filter} />\n        </Grid>\n      </Grid>\n    </Grid>\n  );\n}\n\nconst mapStateToProps = state => {\n  return {\n    todoItems: state.editTodoList.todoItems,\n    inputText: state.changeInput.inputText,\n    filter: state.changeFilter.filter,\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onAdd: (inputText) => dispatch(addTodoItem(inputText)),\n    onRemove: (index) => dispatch(removeTodoItem(index)),\n    onToggle: (index) => dispatch(toggleItem(index)),\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","import {\n    ADD_TODO_ITEM,\n    REMOVE_TODO_ITEM,\n    EDIT_TODO_ITEM,\n    TOGGLE_ITEM,\n} from './constants';\n\nexport const addTodoItem = (text) => ({\n    type: ADD_TODO_ITEM,\n    payload: text\n})\n\nexport const removeTodoItem = (index) => ({\n    type: REMOVE_TODO_ITEM,\n    payload: index\n})\n\nexport const editTodoItem = () => ({\n    type: EDIT_TODO_ITEM\n})\n\nexport const toggleItem = (index) => ({\n    type: TOGGLE_ITEM,\n    payload: index\n})\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {\n    ADD_TODO_ITEM,\n    REMOVE_TODO_ITEM,\n    EDIT_TODO_ITEM,\n    TOGGLE_ITEM,\n} from './constants';\n\n\nconst initialStateTodoList = {\n    todoItems: []\n}\n\nexport const editTodoList = (state = initialStateTodoList, action = {}) => {\n\n    switch (action.type) {\n        case ADD_TODO_ITEM:\n            return action.payload !== ''\n                ?\n                { ...state, todoItems: [...state.todoItems, { text: action.payload, done: false }] }\n                : state\n        case REMOVE_TODO_ITEM:\n            return {\n                ...state, todoItems: state.todoItems.filter((el, index) => {\n                    return index !== action.payload\n                })\n            }\n        case EDIT_TODO_ITEM:\n            return {\n                ...state, todoItems: state.todoItems.map((el, index) => {\n                    if (index === action.payload.index) {\n                        el.text = action.payload.text\n                    }\n                    return el\n                })\n            }\n        case TOGGLE_ITEM:\n            return {\n                ...state, todoItems: state.todoItems.map((el, index) => {\n                    if (index === action.payload) {\n                        el.done = !el.done\n                    }\n                    return el\n                })\n            }\n        default:\n            return state;\n    }\n}\n","import {\n    FILTER_ALL,\n    FILTER_DONE,\n    FILTER_UNDONE,\n} from './constants';\n\n\nconst initialStateFilter = {\n    filter: FILTER_ALL\n};\n\nexport const changeFilter = (state = initialStateFilter, action = {}) => {\n    switch (action.type) {\n        case FILTER_ALL:\n            return { ...state, filter: FILTER_ALL }\n        case FILTER_DONE:\n            return { ...state, filter: FILTER_DONE }\n        case FILTER_UNDONE:\n            return { ...state, filter: FILTER_UNDONE }\n        default:\n            return state\n    }\n}\n","import {\n    INPUT_CHANGE\n} from './constants';\n\nimport { ADD_TODO_ITEM } from '../App/constants'\n\nconst initialStateTodoInput = {\n    inputText: '',\n}\n\nexport const changeInput = (state = initialStateTodoInput, action = {}) => {\n    switch (action.type) {\n        case INPUT_CHANGE:\n            return { ...state, inputText: action.payload }\n        case ADD_TODO_ITEM:\n            return { ...state, inputText: '' }\n        default:\n            return state\n    }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App/App';\nimport reportWebVitals from './reportWebVitals';\n\nimport { Provider } from 'react-redux';\nimport { createStore, combineReducers } from 'redux';\nimport { editTodoList } from './containers/App/reducers';\nimport { changeFilter } from './containers/Filter/reducers';\nimport { changeInput } from './containers/TodoInput/reducers';\n\nconst rootReducer = combineReducers({ editTodoList, changeFilter, changeInput } );\nconst store = createStore(rootReducer);\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}